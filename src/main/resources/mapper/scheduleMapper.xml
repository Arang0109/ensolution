<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ensolution.manager.repository.ScheduleMapper">
    <select id="select" parameterType="int" resultType="ScheduleDto">
        SELECT schedule_id, team_id, stack_measurement_id, measure_date, is_completed
        FROM schedule
        WHERE schedule_id = #{schedule_id}
    </select>

    <insert id="insert" parameterType="ScheduleDto">
        INSERT INTO schedule
            (team_id, stack_measurement_id, measure_date, is_completed)
        VALUES
            (#{team_id}, #{stack_measurement_id}, #{measure_date}, #{is_completed})
    </insert>

    <update id="update" parameterType="ScheduleDto">
        UPDATE stack_measurement
        SET   is_completed = #{is_completed}
        WHERE schedule_id = #{schedule_id}
    </update>

    <delete id="deleteItems" parameterType="list">
        DELETE FROM schedule
        WHERE schedule_id IN
        <foreach item="schedule_id" collection="list" open="(" separator="," close=")">
            #{schedule_id}
        </foreach>
    </delete>

    <select id="selectStackHistory" parameterType="int" resultType="HistoryDto">
        SELECT
            sch.measure_date, sm.stack_id, sch.team_id, team.team_name, GROUP_CONCAT(DISTINCT sm.pollutant_id ORDER BY sm.pollutant_id ASC) AS pollutant_ids
        FROM schedule sch
            INNER JOIN stack_measurement sm ON sch.stack_measurement_id = sm.stack_measurement_id
            INNER JOIN team ON team.team_id = sch.team_id
        WHERE sch.is_completed = 1 AND sm.stack_id = #{stack_id}
        GROUP BY sch.measure_date, sm.stack_id, sch.team_id
        ORDER BY sch.measure_date DESC
    </select>
</mapper>